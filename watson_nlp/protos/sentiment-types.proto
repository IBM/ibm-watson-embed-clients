/* ***************************************************************** */

/*                                                                   */

/* IBM Confidential                                                  */

/* OCO Source Materials                                              */

/*                                                                   */

/* (C) Copyright IBM Corp. 2001, 2018                                */

/*                                                                   */

/* The source code for this program is not published or otherwise    */

/* divested of its trade secrets, irrespective of what has been      */

/* deposited with the U. S. Copyright Office                         */

/*                                                                   */

/* US Government Users Restricted Rights - Use, duplication or       */

/* disclosure restricted by GSA ADP Schedule Contract with IBM Corp. */

/*                                                                   */

/* ***************************************************************** */



syntax = "proto3";

package watson_core_data_model.nlp;

option go_package = "github.ibm.com/ai-foundation/watson_nlp_runtime_client/watson_core_data_model/nlp";

option java_package = "com.ibm.watson.runtime.nlp";

option java_multiple_files = true;



import "producer-types.proto";

import "text-primitive-types.proto";



/********************************************************************************

 * This file houses protobuf interface definitions for sentiment analysis       *

 *******************************************************************************/



/**

 * The full set of labels that can be applied as a top-level sentiment classification.

 */

enum SentimentLabel {

  SENT_UNSET    = 0; // Make explicit that the zero-value is unset

  SENT_NEGATIVE = 1;

  SENT_NEUTRAL  = 2;

  SENT_POSITIVE = 3;

}



/**

 * The full sentiment result expressed in a given context (document or target)

 */

message Sentiment {

    float score          = 1; // (required) The score of the sentiment in the [-1, 1] range

    SentimentLabel label = 2; // (required) The trinary classification label

    bool mixed           = 3; // (optional) Indicator that in the context, the sentiment is both positive and negative

    string target        = 4; // (optional) The target string for this sentiment prediction.

                              //   NOTE: This should only be set for targeted sentiment,

                              //   and should be automatically populated by from spans.

}





/**

 * An individual, atomic sentiment mention over a given region of the input (could be a sentence, a paragraph, a section of text within a sentence, etc.)

 */

message AtomicSentiment {

    Span span            = 1; // (required) Location of region of interest (could be a sentence, a paragraph, a section of text within a sentence)

    float score          = 2; // (required) The score of the sentiment in the [-1, 1] range

    SentimentLabel label = 3; // (required) The trinary classification label

}



/**

 * A aggregate sentiment prediction for a number of atomic sentiments within the document.

 */

message AggregateSentimentPrediction {

    float score                                          = 1; // (optional) The score of the sentiment in the [-1, 1] range

    SentimentLabel label                                 = 2; // (required) The trinary classification label

    bool mixed                                           = 3; // (optional) Indicator that in the context, the sentiment is both positive and negative

    string target                                        = 4; // (optional) The target string for this sentiment prediction.

    repeated AtomicSentiment sentiment_mentions          = 5; // Individual atomic sentiments that went into producing the aggregated sentiment

    watson_core_data_model.common.ProducerId producer_id = 6; // (optional) The block that produced this sentiment prediction

}





/**

 * An individual, "atomic" sentiment mention over a given region of the input (could be a sentence, a paragraph, a section of text within a sentence, etc.)

 */

 message SentimentProb {

    float positive            = 1; // (required) The score of the positive probability in the [0, 1] range

    float neutral             = 2; // (required) The score of the neutral probability label in the [0, 1] range

    float negative            = 3; // (required) The score of the negative probability label in the [0, 1] range

}



message SentimentMention {

    Span span            = 1; // (required) Location of region of interest (could be a sentence, a paragraph, a section of text within a sentence)

    SentimentProb sentimentprob  = 2; // (required) The prob of the sentimentx

}



/**

 * A sentiment prediction for a number of atomic sentiments within the document.

 */

message AggregatedSentiment {

    float score                                          = 1; // (required) The score of the sentiment in the [-1, 1] range

    SentimentLabel label                                 = 2; // (required) The trinary classification label

    bool mixed                                           = 3; // (optional) Indicator that in the context, the sentiment is both positive and negative

    repeated SentimentMention sentiment_mentions         = 4; // (optional) Individual atomic sentiments that went into producing the aggregated sentiment

}





message TargetsSentimentPrediction {

    map<string, AggregatedSentiment> targeted_sentiments = 1;

    watson_core_data_model.common.ProducerId producer_id = 2;

}





/**

 * The return type for all `sentiment` blocks

 *

 * A sentiment towards a document and optionally specific sentiment targets from within that document.

 */

message SentimentPrediction {

    AggregatedSentiment document_sentiment               = 1; // (optional) Individual sentiment predictions that went into producing the aggregated document sentiment

    TargetsSentimentPrediction targeted_sentiments       = 2; // (optional) Mapping from target string to computed sentiment for the given target

    watson_core_data_model.common.ProducerId producer_id = 3; // The workflow that produced this sentiment prediction

}
