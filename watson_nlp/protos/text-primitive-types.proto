/* ***************************************************************** */

/*                                                                   */

/* Licensed Materials - Property of IBM                              */

/*                                                                   */

/* (C) Copyright IBM Corp. 2019                                      */

/*                                                                   */

/* US Government Users Restricted Rights - Use, duplication or       */

/* disclosure restricted by GSA ADP Schedule Contract with IBM Corp. */

/*                                                                   */

/* ***************************************************************** */



syntax = "proto3";

package watson_core_data_model.nlp;

option go_package = "github.ibm.com/ai-foundation/watson_nlp_runtime_client/watson_core_data_model/nlp";

option java_package = "com.ibm.watson.runtime.nlp";

option java_multiple_files = true;



/*******************************************************************************

 * This file houses protobuf interface definitions for common primitive types

 * for text operations. *

 ******************************************************************************/



/*-- Primitives -------------------------------------------------------------*/



/**

 * Span within a given body of text represented as start and end.

 * This is the fundamental data structure for representing a region of text.

 * Note:  Spans are always in relative to a text document, i.e., not in reference

 *   to a sentence or paragraph, et cetra.  These other structures can be

 *   cross-referenced instead, which keeps our notion of a span consistent.

 */

message Span {

    uint32 begin = 1; // (required) Beginning offset of the mention

    uint32 end   = 2; // (required) Ending offset of the mention

    string text  = 3; // (optional) Text referenced by this token

                      // Note: In general, text is considered to be optional and should

                      // be automatically populated by the data model implementation.

}



message NGram {

    repeated string texts = 1; // (required) words in the ngram, will have length n, e.g., 3 for a 3-gram

    float relevance       = 2; // (optional) a score in [0, 1] indicating how relevant

                               // this ngram is to a document or document collection

}